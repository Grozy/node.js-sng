#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('blog:server');
var http = require('http');
var querystring = require('querystring');
/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '80');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}

(function init() {

  var post_data = {
    button: [{
        type:"click",
        name: "扫码",
        key: "V1001_TODAY_MUSIC"
      }],
  };
  var data = JSON.stringify(post_data);

  var options = {
    host: 'api.weixin.qq.com',
    path: '/cgi-bin/menu/addconditional?access_token=sng_sc_1991',
    method: 'POST',
    headers: {
            "Content-Type": 'application/json',
            "Content-Length": data.length
        }
  };
  console.log('!!!!!request start!!!!');



  console.log(data);

  var req = http.request(options, function(res){
    console.log('!!!!!success!!!! ' + res);
    console.log('STATUS: ' + res.statusCode);
    console.log('HEADERS: ' + JSON.stringify(res.headers));
    console.log('TRAILERS: ' + JSON.stringify(res.trailers));
  })
  req.on('error', function(e) {
    console.log('problem with request: ' + e.message);
  });

  req.write(data + '\n');
  req.end();
})();
